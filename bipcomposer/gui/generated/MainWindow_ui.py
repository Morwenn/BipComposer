# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'bipcomposer\gui\generated\MainWindow.ui'
#
# Created: Tue Aug 20 00:59:28 2013
#      by: pyside-uic 0.2.14 running on PySide 1.1.2
#
# WARNING! All changes made in this file will be lost!

from PySide import QtCore, QtGui

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/BipComposerIcone.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtGui.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtGui.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.tabs = QtGui.QTabWidget(self.centralwidget)
        self.tabs.setDocumentMode(True)
        self.tabs.setTabsClosable(True)
        self.tabs.setObjectName("tabs")
        self.verticalLayout.addWidget(self.tabs)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtGui.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 18))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtGui.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtGui.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtGui.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolbarFile = QtGui.QToolBar(MainWindow)
        self.toolbarFile.setIconSize(QtCore.QSize(17, 14))
        self.toolbarFile.setObjectName("toolbarFile")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolbarFile)
        self.toolbarEdit = QtGui.QToolBar(MainWindow)
        self.toolbarEdit.setIconSize(QtCore.QSize(17, 14))
        self.toolbarEdit.setObjectName("toolbarEdit")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolbarEdit)
        self.action_new = QtGui.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/new.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_new.setIcon(icon1)
        self.action_new.setObjectName("action_new")
        self.action_open = QtGui.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/open.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_open.setIcon(icon2)
        self.action_open.setObjectName("action_open")
        self.action_save = QtGui.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/save.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_save.setIcon(icon3)
        self.action_save.setObjectName("action_save")
        self.action_save_as = QtGui.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/save-as.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_save_as.setIcon(icon4)
        self.action_save_as.setShortcut("Ctrl+Shift+S")
        self.action_save_as.setObjectName("action_save_as")
        self.action_undo = QtGui.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icons/undo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_undo.setIcon(icon5)
        self.action_undo.setObjectName("action_undo")
        self.action_redo = QtGui.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icons/redo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_redo.setIcon(icon6)
        self.action_redo.setObjectName("action_redo")
        self.action_cut = QtGui.QAction(MainWindow)
        self.action_cut.setObjectName("action_cut")
        self.action_copy = QtGui.QAction(MainWindow)
        self.action_copy.setObjectName("action_copy")
        self.action_paste = QtGui.QAction(MainWindow)
        self.action_paste.setObjectName("action_paste")
        self.action_delete = QtGui.QAction(MainWindow)
        self.action_delete.setObjectName("action_delete")
        self.action_select_all = QtGui.QAction(MainWindow)
        self.action_select_all.setObjectName("action_select_all")
        self.menuFile.addAction(self.action_new)
        self.menuFile.addAction(self.action_open)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.action_save)
        self.menuFile.addAction(self.action_save_as)
        self.menuEdit.addAction(self.action_undo)
        self.menuEdit.addAction(self.action_redo)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.action_cut)
        self.menuEdit.addAction(self.action_copy)
        self.menuEdit.addAction(self.action_paste)
        self.menuEdit.addAction(self.action_delete)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.action_select_all)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.toolbarFile.addAction(self.action_new)
        self.toolbarFile.addAction(self.action_open)
        self.toolbarFile.addAction(self.action_save)
        self.toolbarFile.addAction(self.action_save_as)
        self.toolbarEdit.addAction(self.action_undo)
        self.toolbarEdit.addAction(self.action_redo)

        self.retranslateUi(MainWindow)
        self.tabs.setCurrentIndex(-1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(_('BipComposer'))
        self.menuFile.setTitle(_('&File'))
        self.menuEdit.setTitle(_('&Edit'))
        self.toolbarFile.setWindowTitle(_('toolBar'))
        self.toolbarEdit.setWindowTitle(_('toolBar_2'))
        self.action_new.setText(_('&New'))
        self.action_open.setText(_('&Open...'))
        self.action_save.setText(_('&Save'))
        self.action_save_as.setText(_('Save &as...'))
        self.action_undo.setText(_('&Undo'))
        self.action_redo.setText(_('&Redo'))
        self.action_redo.setShortcut(_('Ctrl+Shift+Z, Ctrl+Y'))
        self.action_cut.setText(_('&Cut'))
        self.action_copy.setText(_('C&opy'))
        self.action_paste.setText(_('&Paste'))
        self.action_delete.setText(_('&Delete'))
        self.action_select_all.setText(_('&Select all'))

import bipcomposer.icons
